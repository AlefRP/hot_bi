<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>dim_course</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2024/07/07 12:12:09.022</created_date>
    <modified_user>-</modified_user>
    <modified_date>2024/07/07 12:12:09.022</modified_date>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>as-l_key</from>
      <to>sv-cps</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>sv-cps</from>
      <to>iu_d_paid</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>ti-courses</from>
      <to>as-l_key</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>as-l_key</name>
    <type>Sequence</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <increment_by>1</increment_by>
    <max_value>999999999</max_value>
    <seqname>SEQ_</seqname>
    <start_at>1</start_at>
    <use_counter>Y</use_counter>
    <use_database>N</use_database>
    <valuename>paid_key</valuename>
    <attributes/>
    <GUI>
      <xloc>128</xloc>
      <yloc>32</yloc>
    </GUI>
  </transform>
  <transform>
    <name>iu_d_paid</name>
    <type>InsertUpdate</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <commit>100</commit>
    <connection>insert_mysql_dw</connection>
    <lookup>
      <key>
        <condition>=</condition>
        <field>paid_key</field>
        <name>paid_key</name>
        <name2/>
      </key>
      <schema/>
      <table>dim_paid</table>
      <value>
        <name>paid_key</name>
        <rename>paid_key</rename>
        <update>N</update>
      </value>
      <value>
        <name>is_paid</name>
        <rename>is_paid</rename>
        <update>Y</update>
      </value>
    </lookup>
    <update_bypassed>N</update_bypassed>
    <attributes/>
    <GUI>
      <xloc>288</xloc>
      <yloc>32</yloc>
    </GUI>
  </transform>
  <transform>
    <name>sv-cps</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>paid_key</name>
      </field>
      <field>
        <name>is_paid</name>
      </field>
      <select_unspecified>N</select_unspecified>
    </fields>
    <attributes/>
    <GUI>
      <xloc>208</xloc>
      <yloc>32</yloc>
    </GUI>
  </transform>
  <transform>
    <name>ti-courses</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>input_postgresql</connection>
    <execute_each_row>N</execute_each_row>
    <limit>0</limit>
    <sql>SELECT DISTINCT
	CASE 	
		WHEN CAST(c."is_paid" AS INTEGER) = 1 THEN 'Paid'
		ELSE 'Free'
	END AS is_paid
FROM courses AS c;</sql>
    <variables_active>N</variables_active>
    <attributes/>
    <GUI>
      <xloc>48</xloc>
      <yloc>32</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
